<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="48" errors="0" failures="0" not-run="0" inconclusive="6" ignored="0" skipped="0" invalid="0" date="2018-06-14" time="18:49:57">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\sqlextras" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Inconclusive" success="True" time="13.1408" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\sqlextras\SQLExtras.Tests.ps1" executed="True" result="Inconclusive" success="True" time="13.1408" asserts="0" description="C:\projects\sqlextras\SQLExtras.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="sqlextras : Module Tests" executed="True" result="Success" success="True" time="5.7767" asserts="0" description="sqlextras : Module Tests">
            <results>
              <test-case description="should have a test for each function" name="sqlextras : Module Tests.should have a test for each function" time="5.7767" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Install-SQLServer" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Install-SQLServer">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLMemberRole" executed="True" result="Inconclusive" success="True" time="0.4022" asserts="0" description="sqlextras : Get-SQLMemberRole">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.4022" asserts="0" description="Output">
                <results>
                  <test-case description="should return an custom object" name="sqlextras : Get-SQLMemberRole.Output.should return an custom object" time="0.3784" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="SHould return all (5) objects when a membername is not included" name="sqlextras : Get-SQLMemberRole.Output.SHould return all (5) objects when a membername is not included" time="0.0147" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return only 1 object when a Membername is included" name="sqlextras : Get-SQLMemberRole.Output.Should return only 1 object when a Membername is included" time="0.0025" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return all objects when a DB is not included" name="sqlextras : Get-SQLMemberRole.Output.Should return all objects when a DB is not included" time="0.0022" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return all objects for a DB (2) when a DB is included" name="sqlextras : Get-SQLMemberRole.Output.Should return all objects for a DB (2) when a DB is included" time="0.0022" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return only 1 object when a DB and Member name is included" name="sqlextras : Get-SQLMemberRole.Output.Should return only 1 object when a DB and Member name is included" time="0.0022" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SQLPermission" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SQLPermission">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLPermission" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLPermission">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Remove-SQLDatabase" executed="True" result="Success" success="True" time="0.3431" asserts="0" description="sqlextras : Remove-SQLDatabase">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Success" success="True" time="0.3431" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Remove-SQLDatabase.Help.has Synopsis Help Section" time="0.2714" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Description Help Section" name="sqlextras : Remove-SQLDatabase.Help.has Description Help Section" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Parameters Help Section" name="sqlextras : Remove-SQLDatabase.Help.has Parameters Help Section" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Remove-SQLDatabase.Help.Example - Count should be greater than 0" time="0.0458" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Notes Help Section" name="sqlextras : Remove-SQLDatabase.Help.has Notes Help Section" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0" asserts="0" description="Execution">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Repair-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Repair-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLJob" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLJob">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SQLJob" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SQLJob">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : New-SQLSchedule" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : New-SQLSchedule">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLSchedule" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLSchedule">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Import-SSRSReport" executed="True" result="Success" success="True" time="0.7491" asserts="0" description="sqlextras : Import-SSRSReport">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Success" success="True" time="0.1729" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Import-SSRSReport.Help.has Synopsis Help Section" time="0.1454" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Description Help Section" name="sqlextras : Import-SSRSReport.Help.has Description Help Section" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Parameters Help Section" name="sqlextras : Import-SSRSReport.Help.has Parameters Help Section" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Import-SSRSReport.Help.Example - Count should be greater than 0" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Notes Help Section" name="sqlextras : Import-SSRSReport.Help.has Notes Help Section" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.5761" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if the connection to the SSRS server fails" name="sqlextras : Import-SSRSReport.Execution.Should throw an error if the connection to the SSRS server fails" time="0.4382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should show no warnings if no warnings exist" name="sqlextras : Import-SSRSReport.Execution.Should show no warnings if no warnings exist" time="0.028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Displays a Warning if one exists" name="sqlextras : Import-SSRSReport.Execution.Displays a Warning if one exists" time="0.0823" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Ignore all Warnings" name="sqlextras : Import-SSRSReport.Execution.Should Ignore all Warnings" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Backup-SSRSReport" executed="True" result="Success" success="True" time="0.2337" asserts="0" description="sqlextras : Backup-SSRSReport">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Success" success="True" time="0.1352" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Backup-SSRSReport.Help.has Synopsis Help Section" time="0.1022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Description Help Section" name="sqlextras : Backup-SSRSReport.Help.has Description Help Section" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Parameters Help Section" name="sqlextras : Backup-SSRSReport.Help.has Parameters Help Section" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Backup-SSRSReport.Help.Example - Count should be greater than 0" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Notes Help Section" name="sqlextras : Backup-SSRSReport.Help.has Notes Help Section" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : Backup-SSRSReport.Execution.Should throw an error if connecting to SQL Server Fails" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0.0636" asserts="0" description="Output">
                <results>
                  <test-case description="Should create a file with the backed up report" name="sqlextras : Backup-SSRSReport.Output.Should create a file with the backed up report" time="0.0636" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSReport" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SSRSReport">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSFolderSettings" executed="True" result="Success" success="True" time="2.679" asserts="0" description="sqlextras : Get-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Success" success="True" time="0.1054" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.0754" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Description Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Description Help Section" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Parameters Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Get-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Notes Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Notes Help Section" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.4951" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : Get-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="2.4951" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0.0784" asserts="0" description="Output">
                <results>
                  <test-case description="Should return a custom object" name="sqlextras : Get-SSRSFolderSettings.Output.Should return a custom object" time="0.0784" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SSRSFolderSettings" executed="True" result="Success" success="True" time="2.6698" asserts="0" description="sqlextras : Set-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Success" success="True" time="0.0876" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Description Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Description Help Section" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Parameters Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Set-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Notes Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Notes Help Section" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.5822" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : Set-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="2.5822" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0" asserts="0" description="Output">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : New-SSRSFolderSettings" executed="True" result="Success" success="True" time="0.2873" asserts="0" description="sqlextras : New-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Success" success="True" time="0.2118" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.1773" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Description Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Description Help Section" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Parameters Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : New-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="has Notes Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Notes Help Section" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.0754" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : New-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should throw an error if the user already exists" name="sqlextras : New-SSRSFolderSettings.Execution.Should throw an error if the user already exists" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0" asserts="0" description="Output">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSSitePermissions" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SSRSSitePermissions">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Add-SSRSSitePermissions" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Add-SSRSSitePermissions">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSReportDataSource" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SSRSReportDataSource">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SSRSReportDataSource" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SSRSReportDataSource">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLClientProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLClientProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLNetworkProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLNetworkProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SQLNetworkProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SQLNetworkProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLDBMail" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLDBMail">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLDBMailAccount" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLDBMailAccount">
            <results />
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>