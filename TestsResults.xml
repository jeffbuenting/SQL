<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="43" errors="0" failures="28" not-run="0" inconclusive="6" ignored="0" skipped="0" invalid="0" date="2018-06-06" time="14:16:27">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\sqlextras" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="8.703" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\sqlextras\SQLExtras.Tests.ps1" executed="True" result="Failure" success="False" time="8.703" asserts="0" description="C:\projects\sqlextras\SQLExtras.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name=" : Module Tests" executed="True" result="Failure" success="False" time="0.4964" asserts="0" description=" : Module Tests">
            <results>
              <test-case description="Error occurred in Describe block" name=" : Module Tests.Error occurred in Describe block" time="0.4964" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Cannot validate argument on parameter 'Name'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.</message>
                  <stack-trace>At C:\projects\sqlextras\SQLExtras.Tests.ps1:20 char:36</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : Install-SQLServer" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Install-SQLServer">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLMemberRole" executed="True" result="Inconclusive" success="True" time="0.4971" asserts="0" description=" : Get-SQLMemberRole">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.4971" asserts="0" description="Output">
                <results>
                  <test-case description="should return an custom object" name=" : Get-SQLMemberRole.Output.should return an custom object" time="0.4682" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="SHould return all (5) objects when a membername is not included" name=" : Get-SQLMemberRole.Output.SHould return all (5) objects when a membername is not included" time="0.0196" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return only 1 object when a Membername is included" name=" : Get-SQLMemberRole.Output.Should return only 1 object when a Membername is included" time="0.0025" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return all objects when a DB is not included" name=" : Get-SQLMemberRole.Output.Should return all objects when a DB is not included" time="0.0023" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return all objects for a DB (2) when a DB is included" name=" : Get-SQLMemberRole.Output.Should return all objects for a DB (2) when a DB is included" time="0.0024" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return only 1 object when a DB and Member name is included" name=" : Get-SQLMemberRole.Output.Should return only 1 object when a DB and Member name is included" time="0.0021" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : Set-SQLPermission" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Set-SQLPermission">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLPermission" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLPermission">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Remove-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Remove-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Repair-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Repair-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLJob" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLJob">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Set-SQLJob" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Set-SQLJob">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : New-SQLSchedule" executed="True" result="Success" success="True" time="0" asserts="0" description=" : New-SQLSchedule">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLSchedule" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLSchedule">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Import-SSRSReport" executed="True" result="Failure" success="False" time="1.321" asserts="0" description=" : Import-SSRSReport">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.7607" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name=" : Import-SSRSReport.Help.has Synopsis Help Section" time="0.6288" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 198
198:                 $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name=" : Import-SSRSReport.Help.has Description Help Section" time="0.0425" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 202
202:                 $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name=" : Import-SSRSReport.Help.has Parameters Help Section" time="0.0152" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 206
206:                 $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name=" : Import-SSRSReport.Help.Example - Count should be greater than 0" time="0.0537" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 211
211:                 $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name=" : Import-SSRSReport.Help.has Notes Help Section" time="0.0207" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 223
223:                 $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Failure" success="False" time="0.5603" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if the connection to the SSRS server fails" name=" : Import-SSRSReport.Execution.Should throw an error if the connection to the SSRS server fails" time="0.3671" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should show no warnings if no warnings exist" name=" : Import-SSRSReport.Execution.Should show no warnings if no warnings exist" time="0.0579" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This command has been renamed to 'Assert-VerifiableMock' (without the 's' at the end), please update your code. For more information see: https://github.com/pester/Pester/wiki/Migrating-from-Pester-3-to-Pester-4</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\Program Files\WindowsPowerShell\Modules\Pester\4.3.1\Pester.psm1: line 1161
1161: Throw "This command has been renamed to 'Assert-VerifiableMock' (without the 's' at the end), please update your code. For more information see: https://github.com/pester/Pester/wiki/Migrating-from-Pester-3-to-Pester-4"
</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Displays a Warning if one exists" name=" : Import-SSRSReport.Execution.Displays a Warning if one exists" time="0.1" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Ignore all Warnings" name=" : Import-SSRSReport.Execution.Should Ignore all Warnings" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : Backup-SSRSReport" executed="True" result="Failure" success="False" time="0.4027" asserts="0" description=" : Backup-SSRSReport">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.2849" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name=" : Backup-SSRSReport.Help.has Synopsis Help Section" time="0.1048" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 356
356:                 $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name=" : Backup-SSRSReport.Help.has Description Help Section" time="0.0315" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 360
360:                 $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name=" : Backup-SSRSReport.Help.has Parameters Help Section" time="0.0423" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 364
364:                 $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name=" : Backup-SSRSReport.Help.Example - Count should be greater than 0" time="0.0185" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 369
369:                 $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name=" : Backup-SSRSReport.Help.has Notes Help Section" time="0.0878" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 381
381:                 $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.0406" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name=" : Backup-SSRSReport.Execution.Should throw an error if connecting to SQL Server Fails" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0.0772" asserts="0" description="Output">
                <results>
                  <test-case description="Should create a file with the backed up report" name=" : Backup-SSRSReport.Output.Should create a file with the backed up report" time="0.0772" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SSRSReport" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SSRSReport">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SSRSFolderSettings" executed="True" result="Failure" success="False" time="2.8708" asserts="0" description=" : Get-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.2122" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name=" : Get-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.1147" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 439
439:                 $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name=" : Get-SSRSFolderSettings.Help.has Description Help Section" time="0.0281" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 443
443:                 $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name=" : Get-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0278" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 447
447:                 $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name=" : Get-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0196" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 452
452:                 $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name=" : Get-SSRSFolderSettings.Help.has Notes Help Section" time="0.0221" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 464
464:                 $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.4843" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name=" : Get-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="2.4843" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0.1743" asserts="0" description="Output">
                <results>
                  <test-case description="Should return a custom object" name=" : Get-SSRSFolderSettings.Output.Should return a custom object" time="0.1743" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : Set-SSRSFolderSettings" executed="True" result="Failure" success="False" time="2.5609" asserts="0" description=" : Set-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.2035" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name=" : Set-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.0704" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 539
539:                 $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name=" : Set-SSRSFolderSettings.Help.has Description Help Section" time="0.0127" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 543
543:                 $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name=" : Set-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0124" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 547
547:                 $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name=" : Set-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0783" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 552
552:                 $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name=" : Set-SSRSFolderSettings.Help.has Notes Help Section" time="0.0296" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 564
564:                 $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.3574" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name=" : Set-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="2.3574" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0" asserts="0" description="Output">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : New-SSRSFolderSettings" executed="True" result="Failure" success="False" time="0.5541" asserts="0" description=" : New-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.3004" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name=" : New-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.0966" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 642
642:                 $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name=" : New-SSRSFolderSettings.Help.has Description Help Section" time="0.0145" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 646
646:                 $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name=" : New-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0126" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 650
650:                 $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name=" : New-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0147" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 655
655:                 $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name=" : New-SSRSFolderSettings.Help.has Notes Help Section" time="0.1619" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 667
667:                 $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Failure" success="False" time="0.2537" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name=" : New-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="0.1709" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should throw an error if the user already exists" name=" : New-SSRSFolderSettings.Execution.Should throw an error if the user already exists" time="0.0828" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected an exception, to be thrown, but no exception was thrown.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 721
721:                 { New-SSRSFolderSettings -SSRSServer "SSRSServer" -User 'testuser' -Role 'Browser'  } | Should Throw</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0" asserts="0" description="Output">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SSRSSitePermissions" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SSRSSitePermissions">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Add-SSRSSitePermissions" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Add-SSRSSitePermissions">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SSRSReportDataSource" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SSRSReportDataSource">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Set-SSRSReportDataSource" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Set-SSRSReportDataSource">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLClientProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLClientProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLNetworkProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLNetworkProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Set-SQLNetworkProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Set-SQLNetworkProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLDBMail" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLDBMail">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name=" : Get-SQLDBMailAccount" executed="True" result="Success" success="True" time="0" asserts="0" description=" : Get-SQLDBMailAccount">
            <results />
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>