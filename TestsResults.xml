<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="43" errors="0" failures="30" not-run="0" inconclusive="6" ignored="0" skipped="0" invalid="0" date="2018-06-05" time="18:45:29">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\sqlextras" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="33.2897" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\sqlextras\SQLExtras.Tests.ps1" executed="True" result="Failure" success="False" time="33.2897" asserts="0" description="C:\projects\sqlextras\SQLExtras.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="sqlextras : Module Tests" executed="True" result="Success" success="True" time="8.6355" asserts="0" description="sqlextras : Module Tests">
            <results>
              <test-case description="should have a test for each function" name="sqlextras : Module Tests.should have a test for each function" time="8.6355" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Install-SQLServer" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Install-SQLServer">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLMemberRole" executed="True" result="Inconclusive" success="True" time="0.6408" asserts="0" description="sqlextras : Get-SQLMemberRole">
            <results>
              <test-suite type="TestFixture" name="Output" executed="True" result="Inconclusive" success="True" time="0.6408" asserts="0" description="Output">
                <results>
                  <test-case description="should return an custom object" name="sqlextras : Get-SQLMemberRole.Output.should return an custom object" time="0.5938" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="SHould return all (5) objects when a membername is not included" name="sqlextras : Get-SQLMemberRole.Output.SHould return all (5) objects when a membername is not included" time="0.0361" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return only 1 object when a Membername is included" name="sqlextras : Get-SQLMemberRole.Output.Should return only 1 object when a Membername is included" time="0.0031" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return all objects when a DB is not included" name="sqlextras : Get-SQLMemberRole.Output.Should return all objects when a DB is not included" time="0.0026" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return all objects for a DB (2) when a DB is included" name="sqlextras : Get-SQLMemberRole.Output.Should return all objects for a DB (2) when a DB is included" time="0.0026" asserts="0" success="True" result="Inconclusive" executed="True" />
                  <test-case description="Should return only 1 object when a DB and Member name is included" name="sqlextras : Get-SQLMemberRole.Output.Should return only 1 object when a DB and Member name is included" time="0.0026" asserts="0" success="True" result="Inconclusive" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SQLPermission" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SQLPermission">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLPermission" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLPermission">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Remove-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Remove-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Repair-SQLDatabase" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Repair-SQLDatabase">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLJob" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLJob">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SQLJob" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SQLJob">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : New-SQLSchedule" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : New-SQLSchedule">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLSchedule" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLSchedule">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Import-SSRSReport" executed="True" result="Failure" success="False" time="10.6171" asserts="0" description="sqlextras : Import-SSRSReport">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.7213" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Import-SSRSReport.Help.has Synopsis Help Section" time="0.5111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 200
200:             $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name="sqlextras : Import-SSRSReport.Help.has Description Help Section" time="0.1147" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 204
204:             $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name="sqlextras : Import-SSRSReport.Help.has Parameters Help Section" time="0.019" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 208
208:             $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Import-SSRSReport.Help.Example - Count should be greater than 0" time="0.0597" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 213
213:             $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name="sqlextras : Import-SSRSReport.Help.has Notes Help Section" time="0.0167" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 225
225:             $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Failure" success="False" time="9.8958" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if the connection to the SSRS server fails" name="sqlextras : Import-SSRSReport.Execution.Should throw an error if the connection to the SSRS server fails" time="2.6631" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should show no warnings if no warnings exist" name="sqlextras : Import-SSRSReport.Execution.Should show no warnings if no warnings exist" time="2.4343" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Import-SSRSReports : Error Connecting to SSRS SSRS

     There was an error downloading 'http://ssrs/ReportServer/ReportService2010.asmx'.

     System.Net.WebException</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\sqlextras.psm1: line 1416
1416:                 Throw "Import-SSRSReports : Error Connecting to SSRS $SSRSServer`n`n     $ErrorMessage`n`n     $ExceptionType"
</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Displays a Warning if one exists" name="sqlextras : Import-SSRSReport.Execution.Displays a Warning if one exists" time="2.3595" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Import-SSRSReports : Error Connecting to SSRS SSRS

     There was an error downloading 'http://ssrs/ReportServer/ReportService2010.asmx'.

     System.Net.WebException</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\sqlextras.psm1: line 1416
1416:                 Throw "Import-SSRSReports : Error Connecting to SSRS $SSRSServer`n`n     $ErrorMessage`n`n     $ExceptionType"
</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Should Ignore all Warnings" name="sqlextras : Import-SSRSReport.Execution.Should Ignore all Warnings" time="2.4389" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Import-SSRSReports : Error Connecting to SSRS SSRS

     There was an error downloading 'http://ssrs/ReportServer/ReportService2010.asmx'.

     System.Net.WebException</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\sqlextras.psm1: line 1416
1416:                 Throw "Import-SSRSReports : Error Connecting to SSRS $SSRSServer`n`n     $ErrorMessage`n`n     $ExceptionType"
</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Backup-SSRSReport" executed="True" result="Failure" success="False" time="2.8208" asserts="0" description="sqlextras : Backup-SSRSReport">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.3815" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Backup-SSRSReport.Help.has Synopsis Help Section" time="0.2383" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 355
355:             $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name="sqlextras : Backup-SSRSReport.Help.has Description Help Section" time="0.0877" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 359
359:             $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name="sqlextras : Backup-SSRSReport.Help.has Parameters Help Section" time="0.0207" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 363
363:             $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Backup-SSRSReport.Help.Example - Count should be greater than 0" time="0.0221" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 368
368:             $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name="sqlextras : Backup-SSRSReport.Help.has Notes Help Section" time="0.0128" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 380
380:             $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : Backup-SSRSReport.Execution.Should throw an error if connecting to SQL Server Fails" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Failure" success="False" time="2.4015" asserts="0" description="Output">
                <results>
                  <test-case description="Error occurred in Context block" name="sqlextras : Backup-SSRSReport.Output.Error occurred in Context block" time="2.4015" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Backup-SSRSReports : Error Connecting to SSRS SSRSServer

     There was an error downloading 'http://ssrsserver/ReportServer/ReportService2010.asmx'.

     System.Net.WebException</message>
                      <stack-trace>At C:\projects\sqlextras\sqlextras.psm1:1517 char:17</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSReport" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SSRSReport">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSFolderSettings" executed="True" result="Failure" success="False" time="5.0961" asserts="0" description="sqlextras : Get-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.26" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.1379" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 438
438:             $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Description Help Section" time="0.0222" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 442
442:             $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0286" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 446
446:             $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Get-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0429" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 451
451:             $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name="sqlextras : Get-SSRSFolderSettings.Help.has Notes Help Section" time="0.0283" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 463
463:             $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.4043" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : Get-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="2.4043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Failure" success="False" time="2.4319" asserts="0" description="Output">
                <results>
                  <test-case description="Should return a custom object" name="sqlextras : Get-SSRSFolderSettings.Output.Should return a custom object" time="2.4319" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Get-SSRSFolderSettings : Error Connecting to SSRS Test

     There was an error downloading 'http://test/ReportServer/ReportService2010.asmx'.

     System.Net.WebException</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\sqlextras.psm1: line 1678
1678:                 Throw "Get-SSRSFolderSettings : Error Connecting to SSRS $SSRSServer`n`n     $ErrorMessage`n`n     $ExceptionType"
</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SSRSFolderSettings" executed="True" result="Failure" success="False" time="2.6825" asserts="0" description="sqlextras : Set-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.2441" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 537
537:             $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Description Help Section" time="0.0218" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 541
541:             $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0232" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 545
545:             $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : Set-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0641" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 550
550:             $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name="sqlextras : Set-SSRSFolderSettings.Help.has Notes Help Section" time="0.0219" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 562
562:             $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.4384" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : Set-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="2.4384" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0" asserts="0" description="Output">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : New-SSRSFolderSettings" executed="True" result="Failure" success="False" time="2.7969" asserts="0" description="sqlextras : New-SSRSFolderSettings">
            <results>
              <test-suite type="TestFixture" name="Help" executed="True" result="Failure" success="False" time="0.2151" asserts="0" description="Help">
                <results>
                  <test-case description="has Synopsis Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Synopsis Help Section" time="0.1414" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 640
640:             $H.Synopsis | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Description Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Description Help Section" time="0.0141" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 644
644:             $H.Description | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Parameters Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Parameters Help Section" time="0.0183" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 648
648:             $H.Parameters | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Example - Count should be greater than 0" name="sqlextras : New-SSRSFolderSettings.Help.Example - Count should be greater than 0" time="0.0157" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 0 to be greater than the actual value, but got 0.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 653
653:             $H.examples.example.code.count | Should BeGreaterthan 0</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="has Notes Help Section" name="sqlextras : New-SSRSFolderSettings.Help.has Notes Help Section" time="0.0256" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, C:\projects\sqlextras\SQLExtras.Tests.ps1: line 665
665:             $H.alertSet | Should Not BeNullorEmpty</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Execution" executed="True" result="Success" success="True" time="2.5818" asserts="0" description="Execution">
                <results>
                  <test-case description="Should throw an error if connecting to SQL Server Fails" name="sqlextras : New-SSRSFolderSettings.Execution.Should throw an error if connecting to SQL Server Fails" time="0.2015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should throw an error if the user already exists" name="sqlextras : New-SSRSFolderSettings.Execution.Should throw an error if the user already exists" time="2.3803" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Output" executed="True" result="Success" success="True" time="0" asserts="0" description="Output">
                <results />
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSSitePermissions" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SSRSSitePermissions">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Add-SSRSSitePermissions" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Add-SSRSSitePermissions">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SSRSReportDataSource" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SSRSReportDataSource">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SSRSReportDataSource" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SSRSReportDataSource">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLClientProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLClientProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLNetworkProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLNetworkProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Set-SQLNetworkProtocol" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Set-SQLNetworkProtocol">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLDBMail" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLDBMail">
            <results />
          </test-suite>
          <test-suite type="TestFixture" name="sqlextras : Get-SQLDBMailAccount" executed="True" result="Success" success="True" time="0" asserts="0" description="sqlextras : Get-SQLDBMailAccount">
            <results />
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>